https://vue-test-utils.vuejs.org/zh/guides/#用-jest-测试单文件组件
https://vue-test-utils.vuejs.org/api/#mount


TDD 是一种开发模式（测试驱动开发的流程）
单元测试 是单个方法的测试 
（
测试组件的时候，业务耦合度高导致修改业务逻辑就需要修改测试代码
增加工作量，增加了测试代码，有时候测试代码比业务代码还多
单元测试只保证到某个单元是正常，但整体运行还是具有不确定性
）


TDD的开发流程
0先不着急写代码
1编写测试用例
2运行测试，（这时候测试用例无法通过测试）
3编写代码，使用测试用例通过测试
4优化代码，完成开发。
5功能的迭代，重复以上的步骤

TDD的优势
1长期减少回归bug。因为每次的迭代都会重新跑以前的测试用例，就会减少行代码导致历史代码的bug
2代码质量会更好（组织，可维护性），写测试用例的时候同时就会组织代码的编写结构
3测试覆盖率高
4错误测试代码不容易出现 例如


TDD适用场景：
不适合业务逻辑强的项目或者说带有业务逻辑的某个功能，因会导致双倍工作量（先改测试用例，再改逻辑）
适合验证工具库的项目例如lodash
